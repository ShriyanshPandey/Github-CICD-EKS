version: 0.2
run-as: root

env:
  parameter-store:
    AWS_DEFAULT_REGION: /myapp/github-cicd-eks/aws-default-region
    AWS_CLUSTER_NAME: /myapp/github-cicd-eks/eks-cluster-name
    DOCKER_REGISTRY_URL: /myapp/github-cicd-eks/ecr-url
  
phases:
  install:
    commands:
      - echo "Updating package lists and installing dependencies..."
      - apt-get update && apt-get install -y curl jq
      - echo "Installing kubectl..."
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - bash -c "source ~/.bashrc"
      - echo 'Verifying kubectl installation...'
      - kubectl version --client
      - echo 'Making prereqs.sh executable...'
      - chmod +x eks_deployment_build/prereqs.sh
      - bash eks_deployment_build/prereqs.sh

  pre_build:
    commands:
      - echo "Logging in to Amazon EKS..."
      - aws eks --region "$AWS_DEFAULT_REGION" update-kubeconfig --name "$AWS_CLUSTER_NAME"
      - echo "Checking Kubernetes config..."
      - kubectl config view --minify
      - echo "Checking kubectl access..."
      - kubectl get svc
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | docker login --username AWS --password-stdin "$DOCKER_REGISTRY_URL"

  build:
    commands:
      - kubectl apply -f eks_deployment_build/deployment.yml
      - echo "Deployment Successful"

  post_build:
    commands:
      - kubectl rollout restart deployment/<deployment-name>
